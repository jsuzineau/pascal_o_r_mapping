{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/01_Elements/Categorie/ucCategorie.css","webpack:///./src/app/01_Elements/Categorie/ucCategorie.html","webpack:///./src/app/01_Elements/Categorie/ucCategorie.ts","webpack:///./src/app/01_Elements/Categorie/uclCategorie.css","webpack:///./src/app/01_Elements/Categorie/uclCategorie.html","webpack:///./src/app/01_Elements/Categorie/uclCategorie.ts","webpack:///./src/app/01_Elements/Categorie/ueCategorie.ts","webpack:///./src/app/01_Elements/Categorie/usCategorie.ts","webpack:///./src/app/01_Elements/Development/ucDevelopment.css","webpack:///./src/app/01_Elements/Development/ucDevelopment.html","webpack:///./src/app/01_Elements/Development/ucDevelopment.ts","webpack:///./src/app/01_Elements/Development/uclDevelopment.css","webpack:///./src/app/01_Elements/Development/uclDevelopment.html","webpack:///./src/app/01_Elements/Development/uclDevelopment.ts","webpack:///./src/app/01_Elements/Development/ueDevelopment.ts","webpack:///./src/app/01_Elements/Development/usDevelopment.ts","webpack:///./src/app/01_Elements/Project/ucProject.css","webpack:///./src/app/01_Elements/Project/ucProject.html","webpack:///./src/app/01_Elements/Project/ucProject.ts","webpack:///./src/app/01_Elements/Project/uclProject.css","webpack:///./src/app/01_Elements/Project/uclProject.html","webpack:///./src/app/01_Elements/Project/uclProject.ts","webpack:///./src/app/01_Elements/Project/ueProject.ts","webpack:///./src/app/01_Elements/Project/usProject.ts","webpack:///./src/app/01_Elements/State/ucState.css","webpack:///./src/app/01_Elements/State/ucState.html","webpack:///./src/app/01_Elements/State/ucState.ts","webpack:///./src/app/01_Elements/State/uclState.css","webpack:///./src/app/01_Elements/State/uclState.html","webpack:///./src/app/01_Elements/State/uclState.ts","webpack:///./src/app/01_Elements/State/ueState.ts","webpack:///./src/app/01_Elements/State/usState.ts","webpack:///./src/app/01_Elements/Tag/ucTag.css","webpack:///./src/app/01_Elements/Tag/ucTag.html","webpack:///./src/app/01_Elements/Tag/ucTag.ts","webpack:///./src/app/01_Elements/Tag/uclTag.css","webpack:///./src/app/01_Elements/Tag/uclTag.html","webpack:///./src/app/01_Elements/Tag/uclTag.ts","webpack:///./src/app/01_Elements/Tag/ueTag.ts","webpack:///./src/app/01_Elements/Tag/usTag.ts","webpack:///./src/app/01_Elements/Tag_Development/ucTag_Development.css","webpack:///./src/app/01_Elements/Tag_Development/ucTag_Development.html","webpack:///./src/app/01_Elements/Tag_Development/ucTag_Development.ts","webpack:///./src/app/01_Elements/Tag_Development/uclTag_Development.css","webpack:///./src/app/01_Elements/Tag_Development/uclTag_Development.html","webpack:///./src/app/01_Elements/Tag_Development/uclTag_Development.ts","webpack:///./src/app/01_Elements/Tag_Development/ueTag_Development.ts","webpack:///./src/app/01_Elements/Tag_Development/usTag_Development.ts","webpack:///./src/app/01_Elements/Tag_Work/ucTag_Work.css","webpack:///./src/app/01_Elements/Tag_Work/ucTag_Work.html","webpack:///./src/app/01_Elements/Tag_Work/ucTag_Work.ts","webpack:///./src/app/01_Elements/Tag_Work/uclTag_Work.css","webpack:///./src/app/01_Elements/Tag_Work/uclTag_Work.html","webpack:///./src/app/01_Elements/Tag_Work/uclTag_Work.ts","webpack:///./src/app/01_Elements/Tag_Work/ueTag_Work.ts","webpack:///./src/app/01_Elements/Tag_Work/usTag_Work.ts","webpack:///./src/app/01_Elements/Type_Tag/ucType_Tag.css","webpack:///./src/app/01_Elements/Type_Tag/ucType_Tag.html","webpack:///./src/app/01_Elements/Type_Tag/ucType_Tag.ts","webpack:///./src/app/01_Elements/Type_Tag/uclType_Tag.css","webpack:///./src/app/01_Elements/Type_Tag/uclType_Tag.html","webpack:///./src/app/01_Elements/Type_Tag/uclType_Tag.ts","webpack:///./src/app/01_Elements/Type_Tag/ueType_Tag.ts","webpack:///./src/app/01_Elements/Type_Tag/usType_Tag.ts","webpack:///./src/app/01_Elements/Work/Custom_Component_Work.css","webpack:///./src/app/01_Elements/Work/Custom_Component_Work.html","webpack:///./src/app/01_Elements/Work/Custom_Component_Work.ts","webpack:///./src/app/01_Elements/Work/Custom_Component_Works.css","webpack:///./src/app/01_Elements/Work/Custom_Component_Works.html","webpack:///./src/app/01_Elements/Work/Custom_Component_Works.ts","webpack:///./src/app/01_Elements/Work/ucWork.css","webpack:///./src/app/01_Elements/Work/ucWork.html","webpack:///./src/app/01_Elements/Work/ucWork.ts","webpack:///./src/app/01_Elements/Work/uclWork.css","webpack:///./src/app/01_Elements/Work/uclWork.html","webpack:///./src/app/01_Elements/Work/uclWork.ts","webpack:///./src/app/01_Elements/Work/ueWork.ts","webpack:///./src/app/01_Elements/Work/usWork.ts","webpack:///./src/app/01_Elements/uResult_List.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/app.component.css","webpack:///./src/app/component/app.component.html","webpack:///./src/app/component/app.component.ts","webpack:///./src/app/component/custom.component.css","webpack:///./src/app/component/custom.component.html","webpack:///./src/app/component/custom.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL0NhdGVnb3JpZS91Y0NhdGVnb3JpZS5jc3MifQ== */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>Symbol:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Categorie_Symbol\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Symbol}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Symbol\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Description:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Categorie_Description\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Description}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Description\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Categorie_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Categories_Nouveau\\\">\\r\\n      <button (click)='Categories_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsCategorie} from './usCategorie';\r\nimport { TeCategorie} from './ueCategorie';\r\n\r\n@Component({\r\n  selector: 'cCategorie',\r\n  templateUrl: './ucCategorie.html',\r\n  styleUrls: ['./ucCategorie.css'],\r\n  providers: [TsCategorie],\r\n  })\r\n\r\nexport class TcCategorie implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeCategorie|null= null;\r\n  constructor(private router: Router, private service: TsCategorie)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL0NhdGVnb3JpZS91Y2xDYXRlZ29yaWUuY3NzIn0= */\"","module.exports = \"  <h2>Liste des Categories</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Categories\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Categories\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Categorie of Categories.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Categorie)\\\" class=\\\"Categorie_id\\\">\\r\\n            <span *ngIf=\\\"!Categorie.modifie\\\">{{Categorie.id}}</span>\\r\\n            <span *ngIf= \\\"Categorie.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Categorie.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Categorie)\\\" class=\\\"Categorie_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Categorie.modifie\\\">{{Categorie.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Categorie.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Categorie.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Categorie)\\\" class=\\\"Categorie_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Categorie.modifie\\\" (click)='Categorie.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Categories_Nouveau\\\">\\r\\n      <button (click)='Categories_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cCategorie [e]=\\\"e\\\">  \\r\\n    </cCategorie>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsCategorie} from './usCategorie';\r\nimport { TeCategorie} from './ueCategorie';\r\n\r\n@Component({\r\n  selector: 'clCategorie',\r\n  templateUrl: './uclCategorie.html',\r\n  styleUrls: ['./uclCategorie.css'],\r\n  providers: [TsCategorie],\r\n  })\r\n\r\nexport class TclCategorie implements OnInit\r\n  {\r\n  public e: TeCategorie|null= null;\r\n  public Categories: TResult_List<TeCategorie>;\r\n  constructor(private router: Router, private service: TsCategorie)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Categories =>\r\n        {\r\n        this.Categories= new TResult_List<TeCategorie>(_Categories);\r\n        this.Categories.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeCategorie)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Categories_Nouveau()\r\n    {\r\n    this.service.Insert( new TeCategorie)\r\n      .then( _e =>\r\n        {\r\n        this.Categories.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsCategorie} from './usCategorie';\r\n\r\n@Injectable()\r\nexport class TeCategorie\r\n  {\r\n  id: number;\r\n      Symbol: string;\r\n    Description: string;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsCategorie= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeCategorie\r\n    {\r\n    const Result: TeCategorie= new TeCategorie( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeCategorie   } from './ueCategorie';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsCategorie\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeCategorie): TsCategorie\r\n    {\r\n    const url= API_URL + '/Categorie_Delete' + TeCategorie.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeCategorie>\r\n    {\r\n      const url= API_URL + '/Categorie_Get' + TeCategorie.id_parameter( _id);\r\n      return this.http\r\n        .get<TeCategorie>(  url, {headers: this.headers})\r\n        .map<TeCategorie,TeCategorie>( _e =>\r\n          {\r\n          const Result: TeCategorie= new TeCategorie( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeCategorie): Promise<TeCategorie>\r\n    {\r\n      const url= API_URL + '/Categorie_Insert';\r\n      return this.http\r\n        .post<TeCategorie>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeCategorie,TeCategorie>( _e =>\r\n          {\r\n          const Result: TeCategorie= new TeCategorie( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeCategorie): Promise<TeCategorie>\r\n    {\r\n      const e: TeCategorie= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Categorie_Set' + TeCategorie.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeCategorie>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeCategorie,TeCategorie>( _e =>\r\n          {\r\n          const Result: TeCategorie= new TeCategorie( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeCategorie>>\r\n    {\r\n      const url= API_URL + '/Categorie';\r\n      return this.http\r\n        .get<TResult_List<TeCategorie>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeCategorie>, TResult_List<TeCategorie>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeCategorie>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeCategorie= new TeCategorie( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeCategorie>>\r\n    {\r\n      const url= API_URL + '/Categorie_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeCategorie>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeCategorie>, TResult_List<TeCategorie>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeCategorie>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeCategorie= new TeCategorie( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL0RldmVsb3BtZW50L3VjRGV2ZWxvcG1lbnQuY3NzIn0= */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>nProject:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_nProject\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nProject}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nProject\\\"/></span></span></td></tr>\\r\\n<tr>  <td>nState:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_nState\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nState}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nState\\\"/></span></span></td></tr>\\r\\n<tr>  <td>nCreationWork:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_nCreationWork\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nCreationWork}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nCreationWork\\\"/></span></span></td></tr>\\r\\n<tr>  <td>nSolutionWork:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_nSolutionWork\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nSolutionWork}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nSolutionWork\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Description:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_Description\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Description}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Description\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Steps:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_Steps\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Steps}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Steps\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Origin:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_Origin\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Origin}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Origin\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Solution:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_Solution\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Solution}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Solution\\\"/></span></span></td></tr>\\r\\n<tr>  <td>nCategorie:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_nCategorie\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nCategorie}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nCategorie\\\"/></span></span></td></tr>\\r\\n<tr>  <td>isBug:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_isBug\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.isBug}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.isBug\\\"/></span></span></td></tr>\\r\\n<tr>  <td>nDemander:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_nDemander\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nDemander}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nDemander\\\"/></span></span></td></tr>\\r\\n<tr>  <td>nSheetRef:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Development_nSheetRef\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nSheetRef}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nSheetRef\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Development_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Developments_Nouveau\\\">\\r\\n      <button (click)='Developments_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsDevelopment} from './usDevelopment';\r\nimport { TeDevelopment} from './ueDevelopment';\r\n\r\n@Component({\r\n  selector: 'cDevelopment',\r\n  templateUrl: './ucDevelopment.html',\r\n  styleUrls: ['./ucDevelopment.css'],\r\n  providers: [TsDevelopment],\r\n  })\r\n\r\nexport class TcDevelopment implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeDevelopment|null= null;\r\n  constructor(private router: Router, private service: TsDevelopment)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL0RldmVsb3BtZW50L3VjbERldmVsb3BtZW50LmNzcyJ9 */\"","module.exports = \"  <h2>Liste des Developments</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Developments\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Developments\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Development of Developments.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Development)\\\" class=\\\"Development_id\\\">\\r\\n            <span *ngIf=\\\"!Development.modifie\\\">{{Development.id}}</span>\\r\\n            <span *ngIf= \\\"Development.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Development.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Development)\\\" class=\\\"Development_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Development.modifie\\\">{{Development.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Development.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Development.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Development)\\\" class=\\\"Development_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Development.modifie\\\" (click)='Development.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Developments_Nouveau\\\">\\r\\n      <button (click)='Developments_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cDevelopment [e]=\\\"e\\\">  \\r\\n    </cDevelopment>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsDevelopment} from './usDevelopment';\r\nimport { TeDevelopment} from './ueDevelopment';\r\n\r\n@Component({\r\n  selector: 'clDevelopment',\r\n  templateUrl: './uclDevelopment.html',\r\n  styleUrls: ['./uclDevelopment.css'],\r\n  providers: [TsDevelopment],\r\n  })\r\n\r\nexport class TclDevelopment implements OnInit\r\n  {\r\n  public e: TeDevelopment|null= null;\r\n  public Developments: TResult_List<TeDevelopment>;\r\n  constructor(private router: Router, private service: TsDevelopment)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Developments =>\r\n        {\r\n        this.Developments= new TResult_List<TeDevelopment>(_Developments);\r\n        this.Developments.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeDevelopment)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Developments_Nouveau()\r\n    {\r\n    this.service.Insert( new TeDevelopment)\r\n      .then( _e =>\r\n        {\r\n        this.Developments.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsDevelopment} from './usDevelopment';\r\n\r\n@Injectable()\r\nexport class TeDevelopment\r\n  {\r\n  id: number;\r\n      nProject: number;\r\n    nState: number;\r\n    nCreationWork: number;\r\n    nSolutionWork: number;\r\n    Description: string;\r\n    Steps: string;\r\n    Origin: string;\r\n    Solution: string;\r\n    nCategorie: number;\r\n    isBug: number;\r\n    nDemander: number;\r\n    nSheetRef: number;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsDevelopment= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeDevelopment\r\n    {\r\n    const Result: TeDevelopment= new TeDevelopment( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeDevelopment   } from './ueDevelopment';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsDevelopment\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeDevelopment): TsDevelopment\r\n    {\r\n    const url= API_URL + '/Development_Delete' + TeDevelopment.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeDevelopment>\r\n    {\r\n      const url= API_URL + '/Development_Get' + TeDevelopment.id_parameter( _id);\r\n      return this.http\r\n        .get<TeDevelopment>(  url, {headers: this.headers})\r\n        .map<TeDevelopment,TeDevelopment>( _e =>\r\n          {\r\n          const Result: TeDevelopment= new TeDevelopment( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeDevelopment): Promise<TeDevelopment>\r\n    {\r\n      const url= API_URL + '/Development_Insert';\r\n      return this.http\r\n        .post<TeDevelopment>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeDevelopment,TeDevelopment>( _e =>\r\n          {\r\n          const Result: TeDevelopment= new TeDevelopment( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeDevelopment): Promise<TeDevelopment>\r\n    {\r\n      const e: TeDevelopment= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Development_Set' + TeDevelopment.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeDevelopment>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeDevelopment,TeDevelopment>( _e =>\r\n          {\r\n          const Result: TeDevelopment= new TeDevelopment( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeDevelopment>>\r\n    {\r\n      const url= API_URL + '/Development';\r\n      return this.http\r\n        .get<TResult_List<TeDevelopment>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeDevelopment>, TResult_List<TeDevelopment>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeDevelopment>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeDevelopment= new TeDevelopment( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeDevelopment>>\r\n    {\r\n      const url= API_URL + '/Development_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeDevelopment>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeDevelopment>, TResult_List<TeDevelopment>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeDevelopment>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeDevelopment= new TeDevelopment( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1Byb2plY3QvdWNQcm9qZWN0LmNzcyJ9 */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>Name:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Project_Name\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Name}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Name\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Project_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Projects_Nouveau\\\">\\r\\n      <button (click)='Projects_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsProject} from './usProject';\r\nimport { TeProject} from './ueProject';\r\n\r\n@Component({\r\n  selector: 'cProject',\r\n  templateUrl: './ucProject.html',\r\n  styleUrls: ['./ucProject.css'],\r\n  providers: [TsProject],\r\n  })\r\n\r\nexport class TcProject implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeProject|null= null;\r\n  constructor(private router: Router, private service: TsProject)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1Byb2plY3QvdWNsUHJvamVjdC5jc3MifQ== */\"","module.exports = \"  <h2>Liste des Projects</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Projects\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Projects\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Project of Projects.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Project)\\\" class=\\\"Project_id\\\">\\r\\n            <span *ngIf=\\\"!Project.modifie\\\">{{Project.id}}</span>\\r\\n            <span *ngIf= \\\"Project.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Project.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Project)\\\" class=\\\"Project_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Project.modifie\\\">{{Project.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Project.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Project.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Project)\\\" class=\\\"Project_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Project.modifie\\\" (click)='Project.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Projects_Nouveau\\\">\\r\\n      <button (click)='Projects_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cProject [e]=\\\"e\\\">  \\r\\n    </cProject>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsProject} from './usProject';\r\nimport { TeProject} from './ueProject';\r\n\r\n@Component({\r\n  selector: 'clProject',\r\n  templateUrl: './uclProject.html',\r\n  styleUrls: ['./uclProject.css'],\r\n  providers: [TsProject],\r\n  })\r\n\r\nexport class TclProject implements OnInit\r\n  {\r\n  public e: TeProject|null= null;\r\n  public Projects: TResult_List<TeProject>;\r\n  constructor(private router: Router, private service: TsProject)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Projects =>\r\n        {\r\n        this.Projects= new TResult_List<TeProject>(_Projects);\r\n        this.Projects.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeProject)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Projects_Nouveau()\r\n    {\r\n    this.service.Insert( new TeProject)\r\n      .then( _e =>\r\n        {\r\n        this.Projects.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsProject} from './usProject';\r\n\r\n@Injectable()\r\nexport class TeProject\r\n  {\r\n  id: number;\r\n      Name: string;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsProject= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeProject\r\n    {\r\n    const Result: TeProject= new TeProject( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeProject   } from './ueProject';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsProject\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeProject): TsProject\r\n    {\r\n    const url= API_URL + '/Project_Delete' + TeProject.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeProject>\r\n    {\r\n      const url= API_URL + '/Project_Get' + TeProject.id_parameter( _id);\r\n      return this.http\r\n        .get<TeProject>(  url, {headers: this.headers})\r\n        .map<TeProject,TeProject>( _e =>\r\n          {\r\n          const Result: TeProject= new TeProject( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeProject): Promise<TeProject>\r\n    {\r\n      const url= API_URL + '/Project_Insert';\r\n      return this.http\r\n        .post<TeProject>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeProject,TeProject>( _e =>\r\n          {\r\n          const Result: TeProject= new TeProject( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeProject): Promise<TeProject>\r\n    {\r\n      const e: TeProject= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Project_Set' + TeProject.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeProject>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeProject,TeProject>( _e =>\r\n          {\r\n          const Result: TeProject= new TeProject( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeProject>>\r\n    {\r\n      const url= API_URL + '/Project';\r\n      return this.http\r\n        .get<TResult_List<TeProject>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeProject>, TResult_List<TeProject>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeProject>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeProject= new TeProject( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeProject>>\r\n    {\r\n      const url= API_URL + '/Project_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeProject>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeProject>, TResult_List<TeProject>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeProject>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeProject= new TeProject( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1N0YXRlL3VjU3RhdGUuY3NzIn0= */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>Symbol:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"State_Symbol\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Symbol}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Symbol\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Description:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"State_Description\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Description}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Description\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"State_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"States_Nouveau\\\">\\r\\n      <button (click)='States_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsState} from './usState';\r\nimport { TeState} from './ueState';\r\n\r\n@Component({\r\n  selector: 'cState',\r\n  templateUrl: './ucState.html',\r\n  styleUrls: ['./ucState.css'],\r\n  providers: [TsState],\r\n  })\r\n\r\nexport class TcState implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeState|null= null;\r\n  constructor(private router: Router, private service: TsState)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1N0YXRlL3VjbFN0YXRlLmNzcyJ9 */\"","module.exports = \"  <h2>Liste des States</h2>\\r\\n\\r\\n  <div *ngIf=\\\"States\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"States\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let State of States.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( State)\\\" class=\\\"State_id\\\">\\r\\n            <span *ngIf=\\\"!State.modifie\\\">{{State.id}}</span>\\r\\n            <span *ngIf= \\\"State.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"State.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( State)\\\" class=\\\"State_Libelle\\\">\\r\\n            <span *ngIf=\\\"!State.modifie\\\">{{State.Libelle}}</span>\\r\\n            <span *ngIf= \\\"State.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"State.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( State)\\\" class=\\\"State_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"State.modifie\\\" (click)='State.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"States_Nouveau\\\">\\r\\n      <button (click)='States_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cState [e]=\\\"e\\\">  \\r\\n    </cState>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsState} from './usState';\r\nimport { TeState} from './ueState';\r\n\r\n@Component({\r\n  selector: 'clState',\r\n  templateUrl: './uclState.html',\r\n  styleUrls: ['./uclState.css'],\r\n  providers: [TsState],\r\n  })\r\n\r\nexport class TclState implements OnInit\r\n  {\r\n  public e: TeState|null= null;\r\n  public States: TResult_List<TeState>;\r\n  constructor(private router: Router, private service: TsState)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _States =>\r\n        {\r\n        this.States= new TResult_List<TeState>(_States);\r\n        this.States.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeState)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  States_Nouveau()\r\n    {\r\n    this.service.Insert( new TeState)\r\n      .then( _e =>\r\n        {\r\n        this.States.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsState} from './usState';\r\n\r\n@Injectable()\r\nexport class TeState\r\n  {\r\n  id: number;\r\n      Symbol: string;\r\n    Description: string;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsState= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeState\r\n    {\r\n    const Result: TeState= new TeState( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeState   } from './ueState';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsState\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeState): TsState\r\n    {\r\n    const url= API_URL + '/State_Delete' + TeState.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeState>\r\n    {\r\n      const url= API_URL + '/State_Get' + TeState.id_parameter( _id);\r\n      return this.http\r\n        .get<TeState>(  url, {headers: this.headers})\r\n        .map<TeState,TeState>( _e =>\r\n          {\r\n          const Result: TeState= new TeState( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeState): Promise<TeState>\r\n    {\r\n      const url= API_URL + '/State_Insert';\r\n      return this.http\r\n        .post<TeState>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeState,TeState>( _e =>\r\n          {\r\n          const Result: TeState= new TeState( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeState): Promise<TeState>\r\n    {\r\n      const e: TeState= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/State_Set' + TeState.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeState>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeState,TeState>( _e =>\r\n          {\r\n          const Result: TeState= new TeState( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeState>>\r\n    {\r\n      const url= API_URL + '/State';\r\n      return this.http\r\n        .get<TResult_List<TeState>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeState>, TResult_List<TeState>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeState>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeState= new TeState( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeState>>\r\n    {\r\n      const url= API_URL + '/State_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeState>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeState>, TResult_List<TeState>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeState>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeState= new TeState( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1RhZy91Y1RhZy5jc3MifQ== */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>idType:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Tag_idType\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.idType}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.idType\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Name:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Name\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Name}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Name\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Tags_Nouveau\\\">\\r\\n      <button (click)='Tags_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsTag} from './usTag';\r\nimport { TeTag} from './ueTag';\r\n\r\n@Component({\r\n  selector: 'cTag',\r\n  templateUrl: './ucTag.html',\r\n  styleUrls: ['./ucTag.css'],\r\n  providers: [TsTag],\r\n  })\r\n\r\nexport class TcTag implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeTag|null= null;\r\n  constructor(private router: Router, private service: TsTag)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1RhZy91Y2xUYWcuY3NzIn0= */\"","module.exports = \"  <h2>Liste des Tags</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Tags\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Tags\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Tag of Tags.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag)\\\" class=\\\"Tag_id\\\">\\r\\n            <span *ngIf=\\\"!Tag.modifie\\\">{{Tag.id}}</span>\\r\\n            <span *ngIf= \\\"Tag.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Tag.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag)\\\" class=\\\"Tag_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Tag.modifie\\\">{{Tag.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Tag.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Tag.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag)\\\" class=\\\"Tag_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Tag.modifie\\\" (click)='Tag.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Tags_Nouveau\\\">\\r\\n      <button (click)='Tags_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cTag [e]=\\\"e\\\">  \\r\\n    </cTag>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsTag} from './usTag';\r\nimport { TeTag} from './ueTag';\r\n\r\n@Component({\r\n  selector: 'clTag',\r\n  templateUrl: './uclTag.html',\r\n  styleUrls: ['./uclTag.css'],\r\n  providers: [TsTag],\r\n  })\r\n\r\nexport class TclTag implements OnInit\r\n  {\r\n  public e: TeTag|null= null;\r\n  public Tags: TResult_List<TeTag>;\r\n  constructor(private router: Router, private service: TsTag)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Tags =>\r\n        {\r\n        this.Tags= new TResult_List<TeTag>(_Tags);\r\n        this.Tags.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeTag)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Tags_Nouveau()\r\n    {\r\n    this.service.Insert( new TeTag)\r\n      .then( _e =>\r\n        {\r\n        this.Tags.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsTag} from './usTag';\r\n\r\n@Injectable()\r\nexport class TeTag\r\n  {\r\n  id: number;\r\n      idType: number;\r\n    Name: string;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsTag= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeTag\r\n    {\r\n    const Result: TeTag= new TeTag( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeTag   } from './ueTag';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsTag\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeTag): TsTag\r\n    {\r\n    const url= API_URL + '/Tag_Delete' + TeTag.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeTag>\r\n    {\r\n      const url= API_URL + '/Tag_Get' + TeTag.id_parameter( _id);\r\n      return this.http\r\n        .get<TeTag>(  url, {headers: this.headers})\r\n        .map<TeTag,TeTag>( _e =>\r\n          {\r\n          const Result: TeTag= new TeTag( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeTag): Promise<TeTag>\r\n    {\r\n      const url= API_URL + '/Tag_Insert';\r\n      return this.http\r\n        .post<TeTag>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeTag,TeTag>( _e =>\r\n          {\r\n          const Result: TeTag= new TeTag( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeTag): Promise<TeTag>\r\n    {\r\n      const e: TeTag= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Tag_Set' + TeTag.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeTag>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeTag,TeTag>( _e =>\r\n          {\r\n          const Result: TeTag= new TeTag( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeTag>>\r\n    {\r\n      const url= API_URL + '/Tag';\r\n      return this.http\r\n        .get<TResult_List<TeTag>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeTag>, TResult_List<TeTag>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeTag>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeTag= new TeTag( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeTag>>\r\n    {\r\n      const url= API_URL + '/Tag_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeTag>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeTag>, TResult_List<TeTag>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeTag>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeTag= new TeTag( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1RhZ19EZXZlbG9wbWVudC91Y1RhZ19EZXZlbG9wbWVudC5jc3MifQ== */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>idTag:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Development_idTag\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.idTag}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.idTag\\\"/></span></span></td></tr>\\r\\n<tr>  <td>idDevelopment:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Development_idDevelopment\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.idDevelopment}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.idDevelopment\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Development_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Tag_Developments_Nouveau\\\">\\r\\n      <button (click)='Tag_Developments_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsTag_Development} from './usTag_Development';\r\nimport { TeTag_Development} from './ueTag_Development';\r\n\r\n@Component({\r\n  selector: 'cTag_Development',\r\n  templateUrl: './ucTag_Development.html',\r\n  styleUrls: ['./ucTag_Development.css'],\r\n  providers: [TsTag_Development],\r\n  })\r\n\r\nexport class TcTag_Development implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeTag_Development|null= null;\r\n  constructor(private router: Router, private service: TsTag_Development)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1RhZ19EZXZlbG9wbWVudC91Y2xUYWdfRGV2ZWxvcG1lbnQuY3NzIn0= */\"","module.exports = \"  <h2>Liste des Tag_Developments</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Tag_Developments\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Tag_Developments\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Tag_Development of Tag_Developments.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag_Development)\\\" class=\\\"Tag_Development_id\\\">\\r\\n            <span *ngIf=\\\"!Tag_Development.modifie\\\">{{Tag_Development.id}}</span>\\r\\n            <span *ngIf= \\\"Tag_Development.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Tag_Development.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag_Development)\\\" class=\\\"Tag_Development_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Tag_Development.modifie\\\">{{Tag_Development.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Tag_Development.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Tag_Development.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag_Development)\\\" class=\\\"Tag_Development_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Tag_Development.modifie\\\" (click)='Tag_Development.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Tag_Developments_Nouveau\\\">\\r\\n      <button (click)='Tag_Developments_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cTag_Development [e]=\\\"e\\\">  \\r\\n    </cTag_Development>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsTag_Development} from './usTag_Development';\r\nimport { TeTag_Development} from './ueTag_Development';\r\n\r\n@Component({\r\n  selector: 'clTag_Development',\r\n  templateUrl: './uclTag_Development.html',\r\n  styleUrls: ['./uclTag_Development.css'],\r\n  providers: [TsTag_Development],\r\n  })\r\n\r\nexport class TclTag_Development implements OnInit\r\n  {\r\n  public e: TeTag_Development|null= null;\r\n  public Tag_Developments: TResult_List<TeTag_Development>;\r\n  constructor(private router: Router, private service: TsTag_Development)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Tag_Developments =>\r\n        {\r\n        this.Tag_Developments= new TResult_List<TeTag_Development>(_Tag_Developments);\r\n        this.Tag_Developments.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeTag_Development)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Tag_Developments_Nouveau()\r\n    {\r\n    this.service.Insert( new TeTag_Development)\r\n      .then( _e =>\r\n        {\r\n        this.Tag_Developments.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsTag_Development} from './usTag_Development';\r\n\r\n@Injectable()\r\nexport class TeTag_Development\r\n  {\r\n  id: number;\r\n      idTag: number;\r\n    idDevelopment: number;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsTag_Development= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeTag_Development\r\n    {\r\n    const Result: TeTag_Development= new TeTag_Development( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeTag_Development   } from './ueTag_Development';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsTag_Development\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeTag_Development): TsTag_Development\r\n    {\r\n    const url= API_URL + '/Tag_Development_Delete' + TeTag_Development.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeTag_Development>\r\n    {\r\n      const url= API_URL + '/Tag_Development_Get' + TeTag_Development.id_parameter( _id);\r\n      return this.http\r\n        .get<TeTag_Development>(  url, {headers: this.headers})\r\n        .map<TeTag_Development,TeTag_Development>( _e =>\r\n          {\r\n          const Result: TeTag_Development= new TeTag_Development( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeTag_Development): Promise<TeTag_Development>\r\n    {\r\n      const url= API_URL + '/Tag_Development_Insert';\r\n      return this.http\r\n        .post<TeTag_Development>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeTag_Development,TeTag_Development>( _e =>\r\n          {\r\n          const Result: TeTag_Development= new TeTag_Development( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeTag_Development): Promise<TeTag_Development>\r\n    {\r\n      const e: TeTag_Development= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Tag_Development_Set' + TeTag_Development.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeTag_Development>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeTag_Development,TeTag_Development>( _e =>\r\n          {\r\n          const Result: TeTag_Development= new TeTag_Development( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeTag_Development>>\r\n    {\r\n      const url= API_URL + '/Tag_Development';\r\n      return this.http\r\n        .get<TResult_List<TeTag_Development>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeTag_Development>, TResult_List<TeTag_Development>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeTag_Development>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeTag_Development= new TeTag_Development( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeTag_Development>>\r\n    {\r\n      const url= API_URL + '/Tag_Development_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeTag_Development>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeTag_Development>, TResult_List<TeTag_Development>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeTag_Development>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeTag_Development= new TeTag_Development( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1RhZ19Xb3JrL3VjVGFnX1dvcmsuY3NzIn0= */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>idTag:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Work_idTag\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.idTag}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.idTag\\\"/></span></span></td></tr>\\r\\n<tr>  <td>idWork:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Work_idWork\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.idWork}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.idWork\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Tag_Work_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Tag_Works_Nouveau\\\">\\r\\n      <button (click)='Tag_Works_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsTag_Work} from './usTag_Work';\r\nimport { TeTag_Work} from './ueTag_Work';\r\n\r\n@Component({\r\n  selector: 'cTag_Work',\r\n  templateUrl: './ucTag_Work.html',\r\n  styleUrls: ['./ucTag_Work.css'],\r\n  providers: [TsTag_Work],\r\n  })\r\n\r\nexport class TcTag_Work implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeTag_Work|null= null;\r\n  constructor(private router: Router, private service: TsTag_Work)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1RhZ19Xb3JrL3VjbFRhZ19Xb3JrLmNzcyJ9 */\"","module.exports = \"  <h2>Liste des Tag_Works</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Tag_Works\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Tag_Works\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Tag_Work of Tag_Works.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag_Work)\\\" class=\\\"Tag_Work_id\\\">\\r\\n            <span *ngIf=\\\"!Tag_Work.modifie\\\">{{Tag_Work.id}}</span>\\r\\n            <span *ngIf= \\\"Tag_Work.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Tag_Work.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag_Work)\\\" class=\\\"Tag_Work_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Tag_Work.modifie\\\">{{Tag_Work.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Tag_Work.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Tag_Work.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Tag_Work)\\\" class=\\\"Tag_Work_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Tag_Work.modifie\\\" (click)='Tag_Work.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Tag_Works_Nouveau\\\">\\r\\n      <button (click)='Tag_Works_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cTag_Work [e]=\\\"e\\\">  \\r\\n    </cTag_Work>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsTag_Work} from './usTag_Work';\r\nimport { TeTag_Work} from './ueTag_Work';\r\n\r\n@Component({\r\n  selector: 'clTag_Work',\r\n  templateUrl: './uclTag_Work.html',\r\n  styleUrls: ['./uclTag_Work.css'],\r\n  providers: [TsTag_Work],\r\n  })\r\n\r\nexport class TclTag_Work implements OnInit\r\n  {\r\n  public e: TeTag_Work|null= null;\r\n  public Tag_Works: TResult_List<TeTag_Work>;\r\n  constructor(private router: Router, private service: TsTag_Work)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Tag_Works =>\r\n        {\r\n        this.Tag_Works= new TResult_List<TeTag_Work>(_Tag_Works);\r\n        this.Tag_Works.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeTag_Work)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Tag_Works_Nouveau()\r\n    {\r\n    this.service.Insert( new TeTag_Work)\r\n      .then( _e =>\r\n        {\r\n        this.Tag_Works.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsTag_Work} from './usTag_Work';\r\n\r\n@Injectable()\r\nexport class TeTag_Work\r\n  {\r\n  id: number;\r\n      idTag: number;\r\n    idWork: number;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsTag_Work= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeTag_Work\r\n    {\r\n    const Result: TeTag_Work= new TeTag_Work( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeTag_Work   } from './ueTag_Work';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsTag_Work\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeTag_Work): TsTag_Work\r\n    {\r\n    const url= API_URL + '/Tag_Work_Delete' + TeTag_Work.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeTag_Work>\r\n    {\r\n      const url= API_URL + '/Tag_Work_Get' + TeTag_Work.id_parameter( _id);\r\n      return this.http\r\n        .get<TeTag_Work>(  url, {headers: this.headers})\r\n        .map<TeTag_Work,TeTag_Work>( _e =>\r\n          {\r\n          const Result: TeTag_Work= new TeTag_Work( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeTag_Work): Promise<TeTag_Work>\r\n    {\r\n      const url= API_URL + '/Tag_Work_Insert';\r\n      return this.http\r\n        .post<TeTag_Work>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeTag_Work,TeTag_Work>( _e =>\r\n          {\r\n          const Result: TeTag_Work= new TeTag_Work( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeTag_Work): Promise<TeTag_Work>\r\n    {\r\n      const e: TeTag_Work= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Tag_Work_Set' + TeTag_Work.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeTag_Work>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeTag_Work,TeTag_Work>( _e =>\r\n          {\r\n          const Result: TeTag_Work= new TeTag_Work( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeTag_Work>>\r\n    {\r\n      const url= API_URL + '/Tag_Work';\r\n      return this.http\r\n        .get<TResult_List<TeTag_Work>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeTag_Work>, TResult_List<TeTag_Work>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeTag_Work>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeTag_Work= new TeTag_Work( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeTag_Work>>\r\n    {\r\n      const url= API_URL + '/Tag_Work_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeTag_Work>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeTag_Work>, TResult_List<TeTag_Work>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeTag_Work>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeTag_Work= new TeTag_Work( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1R5cGVfVGFnL3VjVHlwZV9UYWcuY3NzIn0= */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>Name:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Type_Tag_Name\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Name}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Name\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Type_Tag_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Type_Tags_Nouveau\\\">\\r\\n      <button (click)='Type_Tags_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsType_Tag} from './usType_Tag';\r\nimport { TeType_Tag} from './ueType_Tag';\r\n\r\n@Component({\r\n  selector: 'cType_Tag',\r\n  templateUrl: './ucType_Tag.html',\r\n  styleUrls: ['./ucType_Tag.css'],\r\n  providers: [TsType_Tag],\r\n  })\r\n\r\nexport class TcType_Tag implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeType_Tag|null= null;\r\n  constructor(private router: Router, private service: TsType_Tag)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1R5cGVfVGFnL3VjbFR5cGVfVGFnLmNzcyJ9 */\"","module.exports = \"  <h2>Liste des Type_Tags</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Type_Tags\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Type_Tags\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Type_Tag of Type_Tags.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Type_Tag)\\\" class=\\\"Type_Tag_id\\\">\\r\\n            <span *ngIf=\\\"!Type_Tag.modifie\\\">{{Type_Tag.id}}</span>\\r\\n            <span *ngIf= \\\"Type_Tag.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Type_Tag.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Type_Tag)\\\" class=\\\"Type_Tag_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Type_Tag.modifie\\\">{{Type_Tag.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Type_Tag.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Type_Tag.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Type_Tag)\\\" class=\\\"Type_Tag_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Type_Tag.modifie\\\" (click)='Type_Tag.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Type_Tags_Nouveau\\\">\\r\\n      <button (click)='Type_Tags_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cType_Tag [e]=\\\"e\\\">  \\r\\n    </cType_Tag>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsType_Tag} from './usType_Tag';\r\nimport { TeType_Tag} from './ueType_Tag';\r\n\r\n@Component({\r\n  selector: 'clType_Tag',\r\n  templateUrl: './uclType_Tag.html',\r\n  styleUrls: ['./uclType_Tag.css'],\r\n  providers: [TsType_Tag],\r\n  })\r\n\r\nexport class TclType_Tag implements OnInit\r\n  {\r\n  public e: TeType_Tag|null= null;\r\n  public Type_Tags: TResult_List<TeType_Tag>;\r\n  constructor(private router: Router, private service: TsType_Tag)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Type_Tags =>\r\n        {\r\n        this.Type_Tags= new TResult_List<TeType_Tag>(_Type_Tags);\r\n        this.Type_Tags.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeType_Tag)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Type_Tags_Nouveau()\r\n    {\r\n    this.service.Insert( new TeType_Tag)\r\n      .then( _e =>\r\n        {\r\n        this.Type_Tags.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsType_Tag} from './usType_Tag';\r\n\r\n@Injectable()\r\nexport class TeType_Tag\r\n  {\r\n  id: number;\r\n      Name: string;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsType_Tag= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeType_Tag\r\n    {\r\n    const Result: TeType_Tag= new TeType_Tag( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeType_Tag   } from './ueType_Tag';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsType_Tag\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeType_Tag): TsType_Tag\r\n    {\r\n    const url= API_URL + '/Type_Tag_Delete' + TeType_Tag.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeType_Tag>\r\n    {\r\n      const url= API_URL + '/Type_Tag_Get' + TeType_Tag.id_parameter( _id);\r\n      return this.http\r\n        .get<TeType_Tag>(  url, {headers: this.headers})\r\n        .map<TeType_Tag,TeType_Tag>( _e =>\r\n          {\r\n          const Result: TeType_Tag= new TeType_Tag( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeType_Tag): Promise<TeType_Tag>\r\n    {\r\n      const url= API_URL + '/Type_Tag_Insert';\r\n      return this.http\r\n        .post<TeType_Tag>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeType_Tag,TeType_Tag>( _e =>\r\n          {\r\n          const Result: TeType_Tag= new TeType_Tag( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeType_Tag): Promise<TeType_Tag>\r\n    {\r\n      const e: TeType_Tag= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Type_Tag_Set' + TeType_Tag.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeType_Tag>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeType_Tag,TeType_Tag>( _e =>\r\n          {\r\n          const Result: TeType_Tag= new TeType_Tag( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeType_Tag>>\r\n    {\r\n      const url= API_URL + '/Type_Tag';\r\n      return this.http\r\n        .get<TResult_List<TeType_Tag>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeType_Tag>, TResult_List<TeType_Tag>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeType_Tag>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeType_Tag= new TeType_Tag( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeType_Tag>>\r\n    {\r\n      const url= API_URL + '/Type_Tag_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeType_Tag>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeType_Tag>, TResult_List<TeType_Tag>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeType_Tag>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeType_Tag= new TeType_Tag( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1dvcmsvQ3VzdG9tX0NvbXBvbmVudF9Xb3JrLmNzcyJ9 */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>nProject:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_nProject\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nProject}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nProject\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Beginning:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_Beginning\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Beginning}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Beginning\\\"/></span></span></td></tr>\\r\\n<tr>  <td>End:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_End\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.End}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.End\\\"/></span></span></td></tr>\\r\\n<tr>  \\r\\n  <td>Description:</td>\\r\\n  <td>\\r\\n    <span (click)=\\\"onClick( e)\\\" class=\\\"Work_Description\\\">  \\r\\n      <span *ngIf=\\\"!e.modifie\\\">{{e.Description}}</span>  \\r\\n      <span *ngIf= \\\"e.modifie\\\">\\r\\n        <input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Description\\\"/>\\r\\n        <editor [init]=\\\"tinyMceSettings\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Description\\\"></editor>\\r\\n      </span>\\r\\n    </span>\\r\\n  </td>\\r\\n</tr>\\r\\n<tr>  <td>nUser:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_nUser\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nUser}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nUser\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Work_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Works_Nouveau\\\">\\r\\n      <button (click)='Works_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsWork} from './usWork';\r\nimport { TeWork} from './ueWork';\r\n\r\n@Component({\r\n  selector: 'Custom_Component_Work',\r\n  templateUrl: './Custom_Component_Work.html',\r\n  styleUrls: ['./Custom_Component_Work.css'],\r\n  providers: [TsWork],\r\n  })\r\n\r\nexport class Custom_Component_Work implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeWork|null= null;\r\n    public tinyMceSettings \r\n      = \r\n       {\r\n       skin_url: '/assets/tinymce/skins/ui/oxide',\r\n       //skin_url: '/assets/tinymce/skins/',\r\n       //inline: false,\r\n       //statusbar: false,\r\n       //browser_spellcheck: true,\r\n       //height: 320,\r\n       //plugins: 'fullscreen link',\r\n       toolbar: \"numlist bullist\",\r\n       plugins: 'link, lists',\r\n       };\r\n      constructor(private router: Router, private service: TsWork)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1dvcmsvQ3VzdG9tX0NvbXBvbmVudF9Xb3Jrcy5jc3MifQ== */\"","module.exports = \"  <h2>Liste des Works</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Works\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Works\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Work of Works.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Work)\\\" class=\\\"Work_id\\\">\\r\\n             {{Work.id}}\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Work)\\\" class=\\\"Work_Libelle\\\">\\r\\n              {{Work.Libelle}}\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Work)\\\" class=\\\"Work_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Work.modifie\\\" (click)='Work.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Works_Nouveau\\\">\\r\\n      <button (click)='Works_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <Custom_Component_Work [e]=\\\"e\\\">  \\r\\n    </Custom_Component_Work>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsWork} from './usWork';\r\nimport { TeWork} from './ueWork';\r\n\r\n@Component({\r\n  selector: 'Custom_Component_Works',\r\n  templateUrl: './Custom_Component_Works.html',\r\n  styleUrls: ['./Custom_Component_Works.css'],\r\n  providers: [TsWork],\r\n  })\r\n\r\nexport class Custom_Component_Works implements OnInit\r\n  {\r\n  public e: TeWork|null= null;\r\n  public Works: TResult_List<TeWork>;\r\n  constructor(private router: Router, private service: TsWork)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Works =>\r\n        {\r\n        this.Works= new TResult_List<TeWork>(_Works);\r\n        this.Works.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeWork)\r\n    {\r\n    this.e= _e;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Works_Nouveau()\r\n    {\r\n    this.service.Insert( new TeWork)\r\n      .then( _e =>\r\n        {\r\n        this.Works.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1dvcmsvdWNXb3JrLmNzcyJ9 */\"","module.exports = \"  <div *ngIf=\\\"e\\\">\\r\\n    <table>\\r\\n      <tr>  <td>nProject:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_nProject\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nProject}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nProject\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Beginning:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_Beginning\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Beginning}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Beginning\\\"/></span></span></td></tr>\\r\\n<tr>  <td>End:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_End\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.End}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.End\\\"/></span></span></td></tr>\\r\\n<tr>  <td>Description:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_Description\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.Description}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.Description\\\"/></span></span></td></tr>\\r\\n<tr>  <td>nUser:</td><td><span (click)=\\\"onClick( e)\\\" class=\\\"Work_nUser\\\">  <span *ngIf=\\\"!e.modifie\\\">{{e.nUser}}</span>  <span *ngIf= \\\"e.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"e.nUser\\\"/></span></span></td></tr>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( e)\\\" class=\\\"Work_Valider\\\">\\r\\n            <button *ngIf=\\\"e.modifie\\\" (click)='e.Valide()'>Valider</button>\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <!-- <div class=\\\"Works_Nouveau\\\">\\r\\n      <button (click)='Works_Nouveau()'>Nouveau</button>\\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsWork} from './usWork';\r\nimport { TeWork} from './ueWork';\r\n\r\n@Component({\r\n  selector: 'cWork',\r\n  templateUrl: './ucWork.html',\r\n  styleUrls: ['./ucWork.css'],\r\n  providers: [TsWork],\r\n  })\r\n\r\nexport class TcWork implements OnInit\r\n  {\r\n   \r\n    @Input() public e: TeWork|null= null;\r\n  constructor(private router: Router, private service: TsWork)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    }\r\n  onClick()\r\n    {\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwLzAxX0VsZW1lbnRzL1dvcmsvdWNsV29yay5jc3MifQ== */\"","module.exports = \"  <h2>Liste des Works</h2>\\r\\n\\r\\n  <div *ngIf=\\\"Works\\\">\\r\\n    <table><tr>\\r\\n    <td> \\r\\n    <table class=\\\"Works\\\">\\r\\n      <tr>\\r\\n        <th>id     </th>\\r\\n        <th>Libellé</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let Work of Works.Elements\\\">\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Work)\\\" class=\\\"Work_id\\\">\\r\\n            <span *ngIf=\\\"!Work.modifie\\\">{{Work.id}}</span>\\r\\n            <span *ngIf= \\\"Work.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Work.id\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Work)\\\" class=\\\"Work_Libelle\\\">\\r\\n            <span *ngIf=\\\"!Work.modifie\\\">{{Work.Libelle}}</span>\\r\\n            <span *ngIf= \\\"Work.modifie\\\"><input type=\\\"text\\\" (keydown)=\\\"onKeyDown($event)\\\" [(ngModel)]=\\\"Work.Libelle\\\"/></span>\\r\\n          </span>\\r\\n        </td>\\r\\n        <td>\\r\\n          <span (click)=\\\"onClick( Work)\\\" class=\\\"Work_Valider\\\">\\r\\n            <!-- <button *ngIf=\\\"Work.modifie\\\" (click)='Work.Valide()'>Valider</button> -->\\r\\n          </span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <div class=\\\"Works_Nouveau\\\">\\r\\n      <button (click)='Works_Nouveau()'>Nouveau</button>\\r\\n    </div>\\r\\n    </td>\\r\\n    <td *ngIf=\\\"e\\\">\\r\\n    <cWork [e]=\\\"e\\\">  \\r\\n    </cWork>  \\r\\n    </td>  \\r\\n    </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\"","import {  Component,\r\n          OnInit,\r\n          Input,\r\n                                 } from '@angular/core';\r\nimport { Router                  } from '@angular/router';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TsWork} from './usWork';\r\nimport { TeWork} from './ueWork';\r\n\r\n@Component({\r\n  selector: 'clWork',\r\n  templateUrl: './uclWork.html',\r\n  styleUrls: ['./uclWork.css'],\r\n  providers: [TsWork],\r\n  })\r\n\r\nexport class TclWork implements OnInit\r\n  {\r\n  public e: TeWork|null= null;\r\n  public Works: TResult_List<TeWork>;\r\n  constructor(private router: Router, private service: TsWork)\r\n    {\r\n    }\r\n  ngOnInit(): void\r\n    {\r\n    this.service.All_id_Libelle()\r\n      .then( _Works =>\r\n        {\r\n        this.Works= new TResult_List<TeWork>(_Works);\r\n        this.Works.Elements.forEach( _e =>\r\n          {\r\n          _e.service= this.service;\r\n          });\r\n        });\r\n    }\r\n  onClick( _e: TeWork)\r\n    {\r\n    this.e= _e;\r\n    this.e.modifie= true;\r\n    }\r\n  onKeyDown( event): void\r\n    {\r\n    if (13 === event.keyCode)\r\n      {\r\n      if (this.e)\r\n        {\r\n        this.e.Valide();\r\n        }\r\n      }\r\n    }\r\n  Works_Nouveau()\r\n    {\r\n    this.service.Insert( new TeWork)\r\n      .then( _e =>\r\n        {\r\n        this.Works.Elements.push( _e);\r\n        }\r\n        );\r\n    }\r\n  }\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TsWork} from './usWork';\r\n\r\n@Injectable()\r\nexport class TeWork\r\n  {\r\n  id: number;\r\n      nProject: number;\r\n    Beginning: string;\r\n    End: string;\r\n    Description: string;\r\n    nUser: number;\r\n  // champs calculés (supprimés dans to_ServerValue() )\r\n  SID: string= '';\r\n  modifie: Boolean= false;\r\n  service: TsWork= null;\r\n\r\n  public static id_parameter( _id: number) { return /*'id=' +*/ _id; }\r\n\r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  public Valide(): void\r\n    {\r\n    if (!this.service) { return; }\r\n    this.service.Set( this)\r\n    .then( _e => { Object.assign(this, _e); });\r\n    }\r\n  public to_ServerValue(): TeWork\r\n    {\r\n    const Result: TeWork= new TeWork( this);\r\n\r\n    delete Result.SID;\r\n    delete Result.service;\r\n    delete Result.modifie;\r\n\r\n    return Result;\r\n    }\r\n  }\r\n","import { Injectable, OnInit} from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders     } from '@angular/common/http';\r\nimport { Observable     } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { environment    } from '../../../environments/environment';\r\n\r\nimport { TResult_List} from '../uResult_List';\r\nimport { TeWork   } from './ueWork';\r\n\r\nconst API_URL = environment.api_url;\r\n\r\n@Injectable()\r\nexport class TsWork\r\n  {\r\n  // private headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n  private headers = new HttpHeaders({'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'});\r\n\r\n  constructor( private http: HttpClient)\r\n    {\r\n    }\r\n  private handleError( error: any | any)\r\n    {\r\n    console.error( this.constructor.name + '::handleError', error);\r\n    return Observable.throw(error);\r\n    }\r\n\r\n  public Delete( _e: TeWork): TsWork\r\n    {\r\n    const url= API_URL + '/Work_Delete' + TeWork.id_parameter( _e.id);\r\n    this.http.get(  url, {headers: this.headers});\r\n    return this;\r\n    }\r\n  public Get( _id: number): Promise<TeWork>\r\n    {\r\n      const url= API_URL + '/Work_Get' + TeWork.id_parameter( _id);\r\n      return this.http\r\n        .get<TeWork>(  url, {headers: this.headers})\r\n        .map<TeWork,TeWork>( _e =>\r\n          {\r\n          const Result: TeWork= new TeWork( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Insert( _e: TeWork): Promise<TeWork>\r\n    {\r\n      const url= API_URL + '/Work_Insert';\r\n      return this.http\r\n        .post<TeWork>( url, JSON.stringify( _e), {headers: this.headers})\r\n        .map<TeWork,TeWork>( _e =>\r\n          {\r\n          const Result: TeWork= new TeWork( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public Set( _e: TeWork): Promise<TeWork>\r\n    {\r\n      const e: TeWork= _e.to_ServerValue();\r\n\r\n      const url= API_URL + '/Work_Set' + TeWork.id_parameter( e.id);\r\n      return this.http\r\n        .post<TeWork>( url, JSON.stringify( e), {headers: this.headers})\r\n        .map<TeWork,TeWork>( _e =>\r\n          {\r\n          const Result: TeWork= new TeWork( _e);\r\n          Result.service= this;\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  public All(): Promise<TResult_List<TeWork>>\r\n    {\r\n      const url= API_URL + '/Work';\r\n      return this.http\r\n        .get<TResult_List<TeWork>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeWork>, TResult_List<TeWork>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeWork>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeWork= new TeWork( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n    public All_id_Libelle(): Promise<TResult_List<TeWork>>\r\n    {\r\n      const url= API_URL + '/Work_id_Libelle';\r\n      return this.http\r\n        .get<TResult_List<TeWork>>( url, {headers: this.headers})\r\n        .map<TResult_List<TeWork>, TResult_List<TeWork>>( _rl =>\r\n          {\r\n          const Result= new TResult_List<TeWork>();\r\n          for( let _e of _rl.Elements)\r\n            {\r\n            const e: TeWork= new TeWork( _e);\r\n            e.service= this;\r\n            Result.Elements.push( e);\r\n            }\r\n          return Result;\r\n          })\r\n        .toPromise();\r\n    }\r\n  }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TResult_List<T>\r\n  {\r\n    Nom       : string='';\r\n    JSON_Debut: number=-1;\r\n    JSON_Fin  : number=-1;\r\n    Count     : number=0;\r\n    Elements  : Array<T>=[];    \r\n  constructor(values: Object = {})\r\n    {\r\n    Object.assign(this, values);\r\n    }\r\n  }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CustomComponent } from './component/custom.component';\r\nimport { Custom_Component_Works} from './01_Elements/Work/Custom_Component_Works';\r\nimport { TclCategorie} from './01_Elements/Categorie/uclCategorie';\r\nimport { TcCategorie} from './01_Elements/Categorie/ucCategorie';\r\nimport { TclDevelopment} from './01_Elements/Development/uclDevelopment';\r\nimport { TcDevelopment} from './01_Elements/Development/ucDevelopment';\r\nimport { TclProject} from './01_Elements/Project/uclProject';\r\nimport { TcProject} from './01_Elements/Project/ucProject';\r\nimport { TclState} from './01_Elements/State/uclState';\r\nimport { TcState} from './01_Elements/State/ucState';\r\nimport { TclTag} from './01_Elements/Tag/uclTag';\r\nimport { TcTag} from './01_Elements/Tag/ucTag';\r\nimport { TclTag_Development} from './01_Elements/Tag_Development/uclTag_Development';\r\nimport { TcTag_Development} from './01_Elements/Tag_Development/ucTag_Development';\r\nimport { TclTag_Work} from './01_Elements/Tag_Work/uclTag_Work';\r\nimport { TcTag_Work} from './01_Elements/Tag_Work/ucTag_Work';\r\nimport { TclType_Tag} from './01_Elements/Type_Tag/uclType_Tag';\r\nimport { TcType_Tag} from './01_Elements/Type_Tag/ucType_Tag';\r\nimport { TclWork} from './01_Elements/Work/uclWork';\r\nimport { TcWork} from './01_Elements/Work/ucWork';\r\n\r\n\r\nconst routes: Routes =\r\n  [\r\n    { path: '', redirectTo: '/Works', pathMatch: 'full' },\r\n    { path: 'custom', component: CustomComponent},\r\n    { path: 'Custom_Component_Works', component: Custom_Component_Works},\r\n    { path: 'Categories'   , component: TclCategorie},\r\n    { path: 'Categorie'   , component: TcCategorie},\r\n    { path: 'Developments'   , component: TclDevelopment},\r\n    { path: 'Development'   , component: TcDevelopment},\r\n    { path: 'Projects'   , component: TclProject},\r\n    { path: 'Project'   , component: TcProject},\r\n    { path: 'States'   , component: TclState},\r\n    { path: 'State'   , component: TcState},\r\n    { path: 'Tags'   , component: TclTag},\r\n    { path: 'Tag'   , component: TcTag},\r\n    { path: 'Tag_Developments'   , component: TclTag_Development},\r\n    { path: 'Tag_Development'   , component: TcTag_Development},\r\n    { path: 'Tag_Works'   , component: TclTag_Work},\r\n    { path: 'Tag_Work'   , component: TcTag_Work},\r\n    { path: 'Type_Tags'   , component: TclType_Tag},\r\n    { path: 'Type_Tag'   , component: TcType_Tag},\r\n    { path: 'Works'   , component: TclWork},\r\n    { path: 'Work'   , component: TcWork},\r\n    \r\n    // { path: 'detail/:id', component: HeroDetailComponent },\r\n  ];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: \r\n    [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes) //recopié, à surveiller\r\n    ],\r\n  exports: [ RouterModule ]  \r\n})\r\nexport class AppRoutingModule { }\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule     } from '@angular/forms';\r\nimport { HttpModule      } from '@angular/http';\r\nimport { HttpClientModule,\r\n         HttpClientXsrfModule\r\n                         } from '@angular/common/http';\r\nimport { RouterModule    } from '@angular/router';\r\nimport { EditorModule } from '@tinymce/tinymce-angular';\r\n\r\n\r\nimport { AppComponent } from './component/app.component';\r\nimport { CustomComponent } from './component/custom.component';\r\nimport { Custom_Component_Works} from './01_Elements/Work/Custom_Component_Works';\r\nimport { Custom_Component_Work} from './01_Elements/Work/Custom_Component_Work';\r\nimport { TclCategorie} from './01_Elements/Categorie/uclCategorie';\r\nimport { TcCategorie} from './01_Elements/Categorie/ucCategorie';\r\nimport { TclDevelopment} from './01_Elements/Development/uclDevelopment';\r\nimport { TcDevelopment} from './01_Elements/Development/ucDevelopment';\r\nimport { TclProject} from './01_Elements/Project/uclProject';\r\nimport { TcProject} from './01_Elements/Project/ucProject';\r\nimport { TclState} from './01_Elements/State/uclState';\r\nimport { TcState} from './01_Elements/State/ucState';\r\nimport { TclTag} from './01_Elements/Tag/uclTag';\r\nimport { TcTag} from './01_Elements/Tag/ucTag';\r\nimport { TclTag_Development} from './01_Elements/Tag_Development/uclTag_Development';\r\nimport { TcTag_Development} from './01_Elements/Tag_Development/ucTag_Development';\r\nimport { TclTag_Work} from './01_Elements/Tag_Work/uclTag_Work';\r\nimport { TcTag_Work} from './01_Elements/Tag_Work/ucTag_Work';\r\nimport { TclType_Tag} from './01_Elements/Type_Tag/uclType_Tag';\r\nimport { TcType_Tag} from './01_Elements/Type_Tag/ucType_Tag';\r\nimport { TclWork} from './01_Elements/Work/uclWork';\r\nimport { TcWork} from './01_Elements/Work/ucWork';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n@NgModule({\r\n  declarations:\r\n    [\r\n    AppComponent,\r\n    CustomComponent,\r\n    Custom_Component_Works,\r\n    Custom_Component_Work,\r\n    TclCategorie,\r\n    TcCategorie,\r\n    TclDevelopment,\r\n    TcDevelopment,\r\n    TclProject,\r\n    TcProject,\r\n    TclState,\r\n    TcState,\r\n    TclTag,\r\n    TcTag,\r\n    TclTag_Development,\r\n    TcTag_Development,\r\n    TclTag_Work,\r\n    TcTag_Work,\r\n    TclType_Tag,\r\n    TcType_Tag,\r\n    TclWork,\r\n    TcWork,\r\n    \r\n    ],\r\n  imports:\r\n    [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    HttpClientXsrfModule.disable(),\r\n    AppRoutingModule,\r\n    EditorModule\r\n    ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n</div>\\r\\n<nav>\\r\\n    <a routerLink=\\\"/custom\\\" routerLinkActive=\\\"active\\\">Custom</a>\\r\\n  <a routerLink=\\\"/Categories\\\" routerLinkActive=\\\"active\\\">Categories</a>\\r\\n  <a routerLink=\\\"/Developments\\\" routerLinkActive=\\\"active\\\">Developments</a>\\r\\n  <a routerLink=\\\"/Projects\\\" routerLinkActive=\\\"active\\\">Projects</a>\\r\\n  <a routerLink=\\\"/States\\\" routerLinkActive=\\\"active\\\">States</a>\\r\\n  <a routerLink=\\\"/Tags\\\" routerLinkActive=\\\"active\\\">Tags</a>\\r\\n  <a routerLink=\\\"/Tag_Developments\\\" routerLinkActive=\\\"active\\\">Tag_Developments</a>\\r\\n  <a routerLink=\\\"/Tag_Works\\\" routerLinkActive=\\\"active\\\">Tag_Works</a>\\r\\n  <a routerLink=\\\"/Type_Tags\\\" routerLinkActive=\\\"active\\\">Type_Tags</a>\\r\\n  <a routerLink=\\\"/Works\\\" routerLinkActive=\\\"active\\\">Works</a>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'jsWorks';\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9jdXN0b20uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<a href=\\\"index_AngularJS.html\\\">ancien code en AngularJS</a>\\r\\n<Custom_Component_Works></Custom_Component_Works>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'custom',\r\n  templateUrl: './custom.component.html',\r\n  styleUrls: ['./custom.component.css']\r\n})\r\nexport class CustomComponent {\r\n  title = 'jsWorks';\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  //api_url:'http://localhost:1500/64528',\r\n  //api_url:'http://localhost:55334',\r\n  api_url:'',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}